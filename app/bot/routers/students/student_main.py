"""
–ì–ª–∞–≤–Ω—ã–π —Ä–æ—É—Ç–µ—Ä –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ —Å –Ω–æ–≤—ã–º UX —Å–æ–≥–ª–∞—Å–Ω–æ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏.
–†–µ–∞–ª–∏–∑—É–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏.

–°—Ç—Ä—É–∫—Ç—É—Ä–∞:
1. –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (/student)
2. WIC - –†–∞–±–æ—Ç–∞ —Å –Ω–µ–¥–µ–ª—è–º–∏ (–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Å–∏—Å—Ç–µ–º–æ–π)  
3. –ú–æ–∏ –∑–∞–ø–∏—Å–∏ –Ω–∞ —Å–¥–∞—á—É
4. –ú–æ–∏ –æ—Ü–µ–Ω–∫–∏ (–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å /grades)
5. –ò—Å—Ç–æ—Ä–∏—è —Å–¥–∞—á (–∑–∞–≥–ª—É—à–∫–∞)
6. –ê–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã –Ω–µ–¥–µ–ª—å
7. –ê–Ω—Ç–∏-–¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π
"""

from __future__ import annotations
import logging
from datetime import datetime, timezone
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext

# Services
from app.services.users_service import UsersService
from app.services.weeks_service import WeeksService
from app.services.assignments_service import AssignmentsService
from app.services.slot_service import SlotService
from app.services.booking_service import BookingService
from app.services.grade_service import GradeService
from app.services.submission_service import SubmissionService

router = Router(name="students_main")
log = logging.getLogger(__name__)

# ================================================================================================
# FSM STATES
# ================================================================================================

class StudentFSM(StatesGroup):
    """FSM —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤"""
    # WIC States
    wic_week_selected = State()
    week_solution_upload_wait = State()
    
    # Booking States  
    booking_resign_pick_slot = State()

# ================================================================================================
# CALLBACK DATA HELPERS - –µ–¥–∏–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç r=s;a=action;...
# ================================================================================================

def build_callback(action: str, **kwargs) -> str:
    """–ü–æ—Å—Ç—Ä–æ–∏—Ç—å callback_data –≤ –µ–¥–∏–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ r=s;a=action;w=week;..."""
    parts = [f"r=s", f"a={action}"]
    
    for key, value in kwargs.items():
        if value is not None:
            parts.append(f"{key}={value}")
    
    result = ";".join(parts)
    # Telegram –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ 64 –±–∞–π—Ç–∞
    if len(result) > 63:
        log.warning(f"Callback data too long ({len(result)}): {result}")
    return result

def parse_callback(callback_data: str) -> dict:
    """–ü–∞—Ä—Å–∏–Ω–≥ callback_data"""
    result = {}
    try:
        parts = callback_data.split(";")
        for part in parts:
            if "=" in part:
                key, value = part.split("=", 1)
                result[key] = value
    except Exception as e:
        log.error(f"Error parsing callback: {callback_data}, error: {e}")
    return result

# ================================================================================================
# –ê–ì–†–ï–ì–ò–†–û–í–ê–ù–ù–´–ï –°–¢–ê–¢–£–°–´ –ù–ï–î–ï–õ–¨ (–ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É)
# ================================================================================================

def get_week_aggregated_status(
    week_number: int, 
    student_code: str, 
    weeks: WeeksService,
    bookings: BookingService, 
    grades: GradeService,
    submissions: SubmissionService
) -> dict:
    """
    –í—ã—á–∏—Å–ª–∏—Ç—å –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å –Ω–µ–¥–µ–ª–∏ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–∞ –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É:
    1) üü£ –û—Ü–µ–Ω–µ–Ω–æ (–µ—Å—Ç—å grade)
    2) üü° –û–∂–∏–¥–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ (–µ—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∞, grade –Ω–µ—Ç)
    3) üü† –°–ª–æ—Ç –∏–¥—ë—Ç —Å–µ–π—á–∞—Å (–∑–∞–ø–∏—Å—å –µ—Å—Ç—å, –≤—Ä–µ–º—è ¬´—Å–µ–π—á–∞—Å¬ª)
    4) üü¢ –ó–∞–ø–∏—Å—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞ (–±—É–¥—É—â–µ–µ)
    5) ‚ö´ –°–ª–æ—Ç –ø—Ä–æ—à—ë–ª, –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–µ—Ç
    6) ‚ö™ –ó–∞–ø–∏—Å—å –æ—Ç–º–µ–Ω–µ–Ω–∞ (–∏ –Ω–µ—Ç –¥—Ä—É–≥–æ–π –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –Ω–∞ –Ω–µ–¥–µ–ª—é)
    7) üîµ –ù–µ—Ç –∑–∞–ø–∏—Å–∏
    """
    week_info = weeks.get_week(week_number)
    now = datetime.now(timezone.utc)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ü–µ–Ω–∫—É (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç 1)
    try:
        # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –æ—Ü–µ–Ω–∫—É —á–µ—Ä–µ–∑ grades service
        grade_df = grades.table.read()
        if not grade_df.empty:
            student_grades = grade_df[
                (grade_df["student_code"].astype(str) == str(student_code)) &
                (grade_df["task_id"].asstr().str.contains(f"W{week_number:02d}", na=False))
            ]
            if not student_grades.empty:
                grade_value = student_grades.iloc[-1]["points"]
                return {
                    "status": "graded",
                    "emoji": "üü£",
                    "text": f"–û—Ü–µ–Ω–µ–Ω–æ ({grade_value})",
                    "priority": 1
                }
    except Exception as e:
        log.debug(f"Error checking grades for week {week_number}: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç 2)
    try:
        submissions_df = submissions.table.read()
        if not submissions_df.empty:
            student_submissions = submissions_df[
                (submissions_df["student_code"].astype(str) == str(student_code)) &
                (submissions_df["task_id"].asstr().str.contains(f"W{week_number:02d}", na=False))
            ]
            if not student_submissions.empty:
                return {
                    "status": "awaiting_review", 
                    "emoji": "üü°",
                    "text": "–û–∂–∏–¥–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏",
                    "priority": 2
                }
    except Exception as e:
        log.debug(f"Error checking submissions for week {week_number}: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–∏—Å–∏ –Ω–∞ —Å–ª–æ—Ç—ã (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã 3-6)
    try:
        bookings_df = bookings.table.read()
        if not bookings_df.empty:
            # –ù–∞—Ö–æ–¥–∏–º –∑–∞–ø–∏—Å–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞
            student_bookings = bookings_df[
                (bookings_df["student_tg_id"].astype(str) == str(student_code))  # –í–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–Ω–æ tg_id
            ]
            
            # TODO: –ó–¥–µ—Å—å –Ω—É–∂–Ω–∞ –ª–æ–≥–∏–∫–∞ —Å–≤—è–∑–∏ booking -> slot -> week
            # –ü–æ–∫–∞ —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞
            active_bookings = student_bookings[
                student_bookings["status"].str.lower().isin(["active", "confirmed"])
            ]
            
            if not active_bookings.empty:
                # –£–ø—Ä–æ—â–µ–Ω–Ω–æ —Å—á–∏—Ç–∞–µ–º —á—Ç–æ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –∑–∞–ø–∏—Å—å
                return {
                    "status": "booked_future",
                    "emoji": "üü¢", 
                    "text": "–ó–∞–ø–∏—Å—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞",
                    "priority": 4
                }
    except Exception as e:
        log.debug(f"Error checking bookings for week {week_number}: {e}")
    
    # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é - –Ω–µ—Ç –∑–∞–ø–∏—Å–∏ (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç 7)
    return {
        "status": "no_booking",
        "emoji": "üîµ",
        "text": "–ù–µ—Ç –∑–∞–ø–∏—Å–∏",
        "priority": 7
    }

# ================================================================================================
# –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ –°–¢–£–î–ï–ù–¢–ê
# ================================================================================================

@router.message(F.text == "/student")
async def student_main_menu(
    message: Message, 
    actor_tg_id: int, 
    users: UsersService
):
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å—Ç—É–¥–µ–Ω—Ç–∞ —Å–æ–≥–ª–∞—Å–Ω–æ UX —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª—å
    user = users.get_by_tg(actor_tg_id)
    if not user or user.get("role") != "student":
        await message.answer(
            "‚ùå –ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Å—Ç—É–¥–µ–Ω—Ç–∞–º.\n"
            "–ü—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é: /register"
        )
        return
    
    # –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    kb = InlineKeyboardBuilder()
    
    kb.button(
        text="üìò WIC ‚Äî –†–∞–±–æ—Ç–∞ —Å –Ω–µ–¥–µ–ª—è–º–∏",
        callback_data=build_callback("wic_main")
    )
    
    kb.button(
        text="üìÖ –ú–æ–∏ –∑–∞–ø–∏—Å–∏ –Ω–∞ —Å–¥–∞—á—É", 
        callback_data=build_callback("my_bookings_list")
    )
    
    kb.button(
        text="üìä –ú–æ–∏ –æ—Ü–µ–Ω–∫–∏",
        callback_data=build_callback("my_grades_list")
    )
    
    kb.button(
        text="üìú –ò—Å—Ç–æ—Ä–∏—è —Å–¥–∞—á",
        callback_data=build_callback("history_weeks_list")
    )
    
    kb.adjust(1)  # –ü–æ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ –≤ —Ä—è–¥
    
    # –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    student_name = f"{user.get('first_name', '')} {user.get('last_name', '')}".strip()
    if not student_name:
        student_name = "–°—Ç—É–¥–µ–Ω—Ç"
    
    text = f"üëã <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {student_name}!</b>\n\n" \
           f"üìö –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:"
    
    await message.answer(text, reply_markup=kb.as_markup(), parse_mode="HTML")

# ================================================================================================
# WIC - –†–ê–ë–û–¢–ê –° –ù–ï–î–ï–õ–Ø–ú–ò (–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Å–∏—Å—Ç–µ–º–æ–π)
# ================================================================================================

@router.callback_query(F.data == build_callback("wic_main"))
async def wic_main_handler(
    cb: CallbackQuery,
    actor_tg_id: int,
    weeks: WeeksService,
    users: UsersService
):
    """WIC –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω - –≤—ã–±–æ—Ä –Ω–µ–¥–µ–ª–∏ (–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º /week)"""
    await cb.answer()
    
    user = users.get_by_tg(actor_tg_id) 
    if not user or user.get("role") != "student":
        await cb.message.edit_text("‚ùå –î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ —Å—Ç—É–¥–µ–Ω—Ç–∞–º")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–µ–¥–µ–ª–∏ (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –ª–æ–≥–∏–∫—É)
    current_weeks = weeks.get_current_weeks()
    if not current_weeks:
        await cb.message.edit_text(
            "üìö –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–µ–¥–µ–ª—è—Ö –ø–æ–∫–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞.\n\n"
            f"{build_back_to_main_menu()}"
        )
        return
    
    # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –Ω–µ–¥–µ–ª—å —Å –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Å—Ç–∞—Ç—É—Å–∞–º–∏
    kb = InlineKeyboardBuilder()
    
    # –ü–æ–ª—É—á–∞–µ–º student_code –¥–ª—è —Å—Ç–∞—Ç—É—Å–æ–≤
    student_code = user.get("id") or user.get("student_code")
    
    for week_dict in current_weeks:
        week_num = week_dict["week"]
        week_title = week_dict["title"]
        
        # –ê–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å
        if student_code:
            # TODO: –ø–µ—Ä–µ–¥–∞—Ç—å –Ω—É–∂–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
            status_info = {"emoji": "üîµ", "text": "–ù–µ—Ç –∑–∞–ø–∏—Å–∏"}  # –ó–∞–≥–ª—É—à–∫–∞ –ø–æ–∫–∞
        else:
            status_info = {"emoji": "‚ùì", "text": "–°—Ç–∞—Ç—É—Å –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω"}
        
        button_text = f"{status_info['emoji']} W{week_num:02d} ‚Äî {week_title}"
        callback_data = build_callback("week_menu", w=week_num)
        
        kb.button(text=button_text, callback_data=callback_data)
    
    # –ö–Ω–æ–ø–∫–∞ "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –Ω–µ–¥–µ–ª–∏"  
    kb.button(
        text="üìã –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –Ω–µ–¥–µ–ª–∏",
        callback_data=build_callback("wic_show_all")
    )
    
    # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
    kb.button(
        text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        callback_data=build_callback("back_to_main")
    )
    
    kb.adjust(1)
    
    text = "üìò <b>WIC ‚Äî –†–∞–±–æ—Ç–∞ —Å –Ω–µ–¥–µ–ª—è–º–∏</b>\n\n" \
           "üìö –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–¥–µ–ª—é –¥–ª—è —Ä–∞–±–æ—Ç—ã:"
    
    await cb.message.edit_text(text, reply_markup=kb.as_markup(), parse_mode="HTML")

@router.callback_query(F.data == build_callback("wic_show_all"))
async def wic_show_all_weeks(
    cb: CallbackQuery,
    weeks: WeeksService,
    users: UsersService,
    actor_tg_id: int
):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –Ω–µ–¥–µ–ª–∏ –∫—É—Ä—Å–∞"""
    await cb.answer()
    
    all_weeks = weeks.get_all_weeks() 
    if not all_weeks:
        await cb.message.edit_text("üìö –ù–µ–¥–µ–ª–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
        return
    
    kb = InlineKeyboardBuilder()
    
    user = users.get_by_tg(actor_tg_id)
    student_code = user.get("id") or user.get("student_code") if user else None
    
    for week_dict in all_weeks:
        week_num = week_dict["week"]
        week_title = week_dict["title"]
        
        # –ê–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å (–∑–∞–≥–ª—É—à–∫–∞)
        status_emoji = "üîµ"  # TODO: –ø–æ–ª–Ω—ã–π —Ä–∞—Å—á–µ—Ç —Å—Ç–∞—Ç—É—Å–∞
        
        button_text = f"{status_emoji} W{week_num:02d} ‚Äî {week_title}"
        callback_data = build_callback("week_menu", w=week_num)
        
        kb.button(text=button_text, callback_data=callback_data)
    
    # –ù–∞–∑–∞–¥ –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É —Å–ø–∏—Å–∫—É
    kb.button(
        text="‚¨ÖÔ∏è –ö –æ—Å–Ω–æ–≤–Ω–æ–º—É —Å–ø–∏—Å–∫—É", 
        callback_data=build_callback("wic_main")
    )
    
    kb.adjust(1)
    
    text = "üìö <b>–í—Å–µ –Ω–µ–¥–µ–ª–∏ –∫—É—Ä—Å–∞:</b>"
    
    await cb.message.edit_text(text, reply_markup=kb.as_markup(), parse_mode="HTML")

# ================================================================================================
# –ú–ï–ù–Æ –ù–ï–î–ï–õ–ò (–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π week_master –ª–æ–≥–∏–∫–æ–π)
# ================================================================================================

@router.callback_query(F.data.regexp(r"r=s;a=week_menu;w=\d+"))
async def week_menu_handler(
    cb: CallbackQuery,
    actor_tg_id: int,
    weeks: WeeksService,
    assignments: AssignmentsService,
    users: UsersService
):
    """–ú–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –Ω–µ–¥–µ–ª–∏"""
    await cb.answer()
    
    # –ü–∞—Ä—Å–∏–º callback
    data = parse_callback(cb.data)
    try:
        week_number = int(data.get("w", 0))
    except ValueError:
        await cb.message.edit_text("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–¥–µ–ª–µ
    week_info = weeks.get_week(week_number)
    if not week_info:
        await cb.message.edit_text("‚ùå –ù–µ–¥–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–≥–æ TA
    user = users.get_by_tg(actor_tg_id)
    student_code = user.get("id") or user.get("student_code") if user else None
    
    ta_code = None
    if student_code:
        ta_code = assignments.get_assignment_for_student_code(str(student_code), week_number)
    
    # –ê–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å –Ω–µ–¥–µ–ª–∏
    # TODO: –ø–æ–ª–Ω—ã–π —Ä–∞—Å—á–µ—Ç —Å –ø–µ—Ä–µ–¥–∞—á–µ–π –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
    status_emoji = "üîµ"
    status_text = "–ù–µ—Ç –∑–∞–ø–∏—Å–∏"
    
    # –°–æ–∑–¥–∞–µ–º –º–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π
    kb = InlineKeyboardBuilder()
    
    # 1. –û–ø–∏—Å–∞–Ω–∏–µ –∏ –¥–µ–¥–ª–∞–π–Ω
    kb.button(
        text="‚ÑπÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ –∏ –¥–µ–¥–ª–∞–π–Ω",
        callback_data=build_callback("week_info", w=week_number)
    )
    
    # 2. –ü–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞—á–∏ –∏ –≤–æ–ø—Ä–æ—Å—ã
    kb.button(
        text="üìù –ü–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞—á–∏ –∏ –≤–æ–ø—Ä–æ—Å—ã", 
        callback_data=build_callback("week_tasks_download", w=week_number)
    )
    
    # 3. –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ—à–µ–Ω–∏–µ
    kb.button(
        text="üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ—à–µ–Ω–∏–µ",
        callback_data=build_callback("week_solution_upload_wait", w=week_number)
    )
    
    # 4. –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å–¥–∞—á—É (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å TA)
    if ta_code:
        kb.button(
            text="‚è∞ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å–¥–∞—á—É",
            callback_data=build_callback("week_signup_pick_teacher", w=week_number, ta=ta_code)
        )
        
        # 5. –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å (–µ—Å–ª–∏ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è)
        kb.button(
            text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å –Ω–∞ —Å–¥–∞—á—É", 
            callback_data=build_callback("week_unsign_list", w=week_number)
        )
    
    # 6. –£–∑–Ω–∞—Ç—å –æ—Ü–µ–Ω–∫—É
    kb.button(
        text="‚úÖ –£–∑–Ω–∞—Ç—å –æ—Ü–µ–Ω–∫—É",
        callback_data=build_callback("week_grade_view", w=week_number)
    )
    
    # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
    kb.button(
        text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
        callback_data=build_callback("wic_main")
    )
    
    kb.adjust(1)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    deadline_str = week_info.get("deadline_str", "–ù–µ —É–∫–∞–∑–∞–Ω")
    is_overdue = week_info.get("is_overdue", False)
    deadline_emoji = "üî¥" if is_overdue else "üü¢"
    
    text = f"<b>W{week_number:02d} ‚Äî {week_info['title']}</b>\n\n" \
           f"üìä <b>–°—Ç–∞—Ç—É—Å:</b> {status_emoji} {status_text}\n" \
           f"üìÖ <b>–î–µ–¥–ª–∞–π–Ω:</b> {deadline_str} {deadline_emoji}\n\n" \
           f"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    
    await cb.message.edit_text(text, reply_markup=kb.as_markup(), parse_mode="HTML")

# ================================================================================================
# –î–ï–ô–°–¢–í–ò–Ø –î–õ–Ø –ù–ï–î–ï–õ–ò
# ================================================================================================

@router.callback_query(F.data.regexp(r"r=s;a=week_info;w=\d+"))
async def week_info_handler(
    cb: CallbackQuery,
    weeks: WeeksService,
    assignments: AssignmentsService,
    users: UsersService,
    actor_tg_id: int
):
    """–ü–æ–∫–∞–∑–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∏ –¥–µ–¥–ª–∞–π–Ω –Ω–µ–¥–µ–ª–∏ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ TA"""
    await cb.answer()
    
    data = parse_callback(cb.data)
    try:
        week_number = int(data.get("w", 0))
    except ValueError:
        await cb.message.edit_text("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
        return
    
    week_info = weeks.get_week(week_number)
    if not week_info:
        await cb.message.edit_text("‚ùå –ù–µ–¥–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–º TA
    user = users.get_by_tg(actor_tg_id)
    student_code = user.get("id") or user.get("student_code") if user else None
    
    ta_info = "–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω"
    if student_code:
        ta_code = assignments.get_assignment_for_student_code(str(student_code), week_number)
        if ta_code:
            ta_user = users.get_by_id(ta_code)
            if ta_user:
                ta_name = f"{ta_user.get('last_name', '')} {ta_user.get('first_name', '')}".strip()
                ta_info = f"{ta_name} ({ta_code})"
            else:
                ta_info = ta_code
    
    status_emoji = "üî¥" if week_info.get("is_overdue", False) else "üü¢"
    
    text = f"‚ÑπÔ∏è <b>W{week_number:02d}: {week_info['title']}</b>\n\n" \
           f"üìù <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b>\n{week_info['description']}\n\n" \
           f"üìÖ <b>–î–µ–¥–ª–∞–π–Ω:</b> {week_info['deadline_str']} {status_emoji}\n\n" \
           f"üë®‚Äçüè´ <b>–ü—Ä–∏–Ω–∏–º–∞–µ—Ç:</b> {ta_info}"
    
    kb = InlineKeyboardBuilder()
    kb.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=build_callback("week_menu", w=week_number))
    
    await cb.message.edit_text(text, reply_markup=kb.as_markup(), parse_mode="HTML")

@router.callback_query(F.data.regexp(r"r=s;a=week_tasks_download;w=\d+"))
async def week_tasks_download_handler(cb: CallbackQuery):
    """–ü–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞—á–∏ –∏ –≤–æ–ø—Ä–æ—Å—ã - –∑–∞–≥–ª—É—à–∫–∞"""
    await cb.answer()
    
    data = parse_callback(cb.data)
    week_number = data.get("w", "?")
    
    text = f"üìù <b>–ó–∞–¥–∞—á–∏ –∏ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è W{week_number}</b>\n\n" \
           f"üöß –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\n\n" \
           f"–ü–æ–∫–∞ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –∑–∞–¥–∞–Ω–∏—è –Ω–∞ —Å–∞–π—Ç–µ –∫—É—Ä—Å–∞:\n" \
           f"üìñ <a href='https://example.com/course'>–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∫—É—Ä—Å–∞</a>"
    
    kb = InlineKeyboardBuilder()
    kb.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=build_callback("week_menu", w=week_number))
    
    await cb.message.edit_text(text, reply_markup=kb.as_markup(), parse_mode="HTML")

@router.callback_query(F.data.regexp(r"r=s;a=week_solution_upload_wait;w=\d+"))
async def week_solution_upload_start(
    cb: CallbackQuery, 
    state: FSMContext
):
    """–ù–∞—á–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É —Ä–µ—à–µ–Ω–∏—è - –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º /submit"""
    await cb.answer()
    
    data = parse_callback(cb.data)
    week_number = data.get("w", "?")
    
    # TODO: –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –ª–æ–≥–∏–∫–æ–π /submit
    text = f"üì§ <b>–ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è W{week_number}</b>\n\n" \
           f"üöß –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\n\n" \
           f"–ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /submit –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ—à–µ–Ω–∏–π."
    
    kb = InlineKeyboardBuilder()
    kb.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=build_callback("week_menu", w=week_number))
    
    await cb.message.edit_text(text, reply_markup=kb.as_markup(), parse_mode="HTML")

@router.callback_query(F.data.regexp(r"r=s;a=week_grade_view;w=\d+"))
async def week_grade_view_handler(cb: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –æ—Ü–µ–Ω–∫—É –∑–∞ –Ω–µ–¥–µ–ª—é - –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å /grades"""
    await cb.answer()
    
    data = parse_callback(cb.data)
    week_number = data.get("w", "?")
    
    # TODO: –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –ª–æ–≥–∏–∫–æ–π grades
    text = f"üéØ <b>–û—Ü–µ–Ω–∫–∞ –∑–∞ W{week_number}</b>\n\n" \
           f"üöß –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\n\n" \
           f"–ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /grades –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –æ—Ü–µ–Ω–æ–∫."
    
    kb = InlineKeyboardBuilder()
    kb.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=build_callback("week_menu", w=week_number))
    
    await cb.message.edit_text(text, reply_markup=kb.as_markup(), parse_mode="HTML")

# ================================================================================================
# –ó–ê–ü–ò–°–¨ –ù–ê –°–î–ê–ß–£ (–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å booking system)
# ================================================================================================

@router.callback_query(F.data.regexp(r"r=s;a=week_signup_pick_teacher;w=\d+;ta=.+"))
async def week_signup_pick_teacher_handler(cb: CallbackQuery):
    """–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å–¥–∞—á—É - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫ —Å–ª–æ—Ç–∞–º TA"""
    await cb.answer()
    
    data = parse_callback(cb.data)
    week_number = data.get("w", "?")
    ta_code = data.get("ta", "?")
    
    # TODO: –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π booking —Å–∏—Å—Ç–µ–º–æ–π
    text = f"‚è∞ <b>–ó–∞–ø–∏—Å—å –Ω–∞ —Å–¥–∞—á—É W{week_number}</b>\n\n" \
           f"üë®‚Äçüè´ <b>–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å:</b> {ta_code}\n\n" \
           f"üöß –§—É–Ω–∫—Ü–∏—è –∑–∞–ø–∏—Å–∏ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\n\n" \
           f"–ü–æ–∫–∞ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é –Ω–∞–ø—Ä—è–º—É—é –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /slots"
    
    kb = InlineKeyboardBuilder()
    kb.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=build_callback("week_menu", w=week_number))
    
    await cb.message.edit_text(text, reply_markup=kb.as_markup(), parse_mode="HTML")

@router.callback_query(F.data.regexp(r"r=s;a=week_unsign_list;w=\d+"))
async def week_unsign_list_handler(cb: CallbackQuery):
    """–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å –Ω–∞ —Å–¥–∞—á—É - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π"""
    await cb.answer()
    
    data = parse_callback(cb.data)
    week_number = data.get("w", "?")
    
    # TODO: –Ω–∞–π—Ç–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–ø–∏—Å–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞ –Ω–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é
    text = f"‚ùå <b>–û—Ç–º–µ–Ω–∞ –∑–∞–ø–∏—Å–∏ –Ω–∞ W{week_number}</b>\n\n" \
           f"üöß –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\n\n" \
           f"–ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /slots –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å—è–º–∏."
    
    kb = InlineKeyboardBuilder()
    kb.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=build_callback("week_menu", w=week_number))
    
    await cb.message.edit_text(text, reply_markup=kb.as_markup(), parse_mode="HTML")

# ================================================================================================
# –ú–û–ò –ó–ê–ü–ò–°–ò –ù–ê –°–î–ê–ß–£ (–∑–∞–º–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–Ω–æ–≥–æ /slots)
# ================================================================================================

@router.callback_query(F.data == build_callback("my_bookings_list"))
async def my_bookings_list_handler(cb: CallbackQuery):
    """–ú–æ–∏ –∑–∞–ø–∏—Å–∏ –Ω–∞ —Å–¥–∞—á—É - —Å–ø–∏—Å–æ–∫ –±—É–¥—É—â–∏—Ö/—Ç–µ–∫—É—â–∏—Ö –∑–∞–ø–∏—Å–µ–π"""
    await cb.answer()
    
    # TODO: —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å–ø–∏—Å–∫–∞ –∑–∞–ø–∏—Å–µ–π —Å—Ç—É–¥–µ–Ω—Ç–∞
    text = f"üìÖ <b>–ú–æ–∏ –∑–∞–ø–∏—Å–∏ –Ω–∞ —Å–¥–∞—á—É</b>\n\n" \
           f"üöß –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\n\n" \
           f"–ó–¥–µ—Å—å –±—É–¥–µ—Ç —Å–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –Ω–∞ —Å–¥–∞—á–∏ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –æ—Ç–º–µ–Ω—ã –∏ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏."
    
    kb = InlineKeyboardBuilder()
    kb.button(
        text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        callback_data=build_callback("back_to_main")
    )
    
    await cb.message.edit_text(text, reply_markup=kb.as_markup(), parse_mode="HTML")

# ================================================================================================
# –ú–û–ò –û–¶–ï–ù–ö–ò (–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º /grades)
# ================================================================================================

@router.callback_query(F.data == build_callback("my_grades_list"))
async def my_grades_list_handler(cb: CallbackQuery):
    """–ú–æ–∏ –æ—Ü–µ–Ω–∫–∏ - –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º /grades"""
    await cb.answer()
    
    # TODO: –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –ª–æ–≥–∏–∫–æ–π /grades
    text = f"üìä <b>–ú–æ–∏ –æ—Ü–µ–Ω–∫–∏</b>\n\n" \
           f"üöß –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\n\n" \
           f"–ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /grades –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Ü–µ–Ω–æ–∫."
    
    kb = InlineKeyboardBuilder()
    kb.button(
        text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        callback_data=build_callback("back_to_main")
    )
    
    await cb.message.edit_text(text, reply_markup=kb.as_markup(), parse_mode="HTML")

# ================================================================================================  
# –ò–°–¢–û–†–ò–Ø –°–î–ê–ß (–∑–∞–≥–ª—É—à–∫–∞)
# ================================================================================================

@router.callback_query(F.data == build_callback("history_weeks_list"))
async def history_weeks_list_handler(cb: CallbackQuery):
    """–ò—Å—Ç–æ—Ä–∏—è —Å–¥–∞—á - –∑–∞–≥–ª—É—à–∫–∞"""
    await cb.answer()
    
    text = f"üìú <b>–ò—Å—Ç–æ—Ä–∏—è —Å–¥–∞—á</b>\n\n" \
           f"üöß –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\n\n" \
           f"–ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏—Å—Ç–æ—Ä–∏—è –≤—Å–µ—Ö –≤–∞—à–∏—Ö –ø—Ä–æ—à–µ–¥—à–∏—Ö —Å–¥–∞—á —Å –¥–µ—Ç–∞–ª—è–º–∏ –ø–æ –∫–∞–∂–¥–æ–π –Ω–µ–¥–µ–ª–µ."
    
    kb = InlineKeyboardBuilder()
    kb.button(
        text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", 
        callback_data=build_callback("back_to_main")
    )
    
    await cb.message.edit_text(text, reply_markup=kb.as_markup(), parse_mode="HTML")

# ================================================================================================
# –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò –ò –ù–ê–í–ò–ì–ê–¶–ò–Ø
# ================================================================================================

@router.callback_query(F.data == build_callback("back_to_main"))
async def back_to_main_handler(
    cb: CallbackQuery,
    actor_tg_id: int, 
    users: UsersService
):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å—Ç—É–¥–µ–Ω—Ç–∞"""
    await cb.answer()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª—å
    user = users.get_by_tg(actor_tg_id)
    if not user or user.get("role") != "student":
        await cb.message.edit_text("‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞")
        return
    
    # –í–æ—Å—Å–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    kb = InlineKeyboardBuilder()
    
    kb.button(
        text="üìò WIC ‚Äî –†–∞–±–æ—Ç–∞ —Å –Ω–µ–¥–µ–ª—è–º–∏",
        callback_data=build_callback("wic_main")
    )
    
    kb.button(
        text="üìÖ –ú–æ–∏ –∑–∞–ø–∏—Å–∏ –Ω–∞ —Å–¥–∞—á—É",
        callback_data=build_callback("my_bookings_list")
    )
    
    kb.button(
        text="üìä –ú–æ–∏ –æ—Ü–µ–Ω–∫–∏", 
        callback_data=build_callback("my_grades_list")
    )
    
    kb.button(
        text="üìú –ò—Å—Ç–æ—Ä–∏—è —Å–¥–∞—á",
        callback_data=build_callback("history_weeks_list")
    )
    
    kb.adjust(1)
    
    student_name = f"{user.get('first_name', '')} {user.get('last_name', '')}".strip()
    if not student_name:
        student_name = "–°—Ç—É–¥–µ–Ω—Ç"
    
    text = f"üëã <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {student_name}!</b>\n\n" \
           f"üìö –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:"
    
    await cb.message.edit_text(text, reply_markup=kb.as_markup(), parse_mode="HTML")

def build_back_to_main_menu() -> str:
    """–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    return "‚¨ÖÔ∏è /student - –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"

# ================================================================================================
# TODO: –î–û–†–ê–ë–û–¢–ö–ê –§–£–ù–ö–¶–ò–ô
# ================================================================================================

"""
TODO –¥–ª—è –ø–æ–ª–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏:

1. –ê–ì–†–ï–ì–ò–†–û–í–ê–ù–ù–´–ï –°–¢–ê–¢–£–°–´:
   - –î–æ—Ä–∞–±–æ—Ç–∞—Ç—å get_week_aggregated_status() —Å –ø–µ—Ä–µ–¥–∞—á–µ–π –≤—Å–µ—Ö –Ω—É–∂–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
   - –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–æ–ª–Ω—É—é –ª–æ–≥–∏–∫—É –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤ —Å—Ç–∞—Ç—É—Å–æ–≤
   - –î–æ–±–∞–≤–∏—Ç—å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏

2. –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –° –°–£–©–ï–°–¢–í–£–Æ–©–ò–ú–ò –§–£–ù–ö–¶–ò–Ø–ú–ò:
   - week_solution_upload_wait: –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ª–æ–≥–∏–∫–æ–π /submit
   - my_grades_list: –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å /grades  
   - week_signup_pick_teacher: –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å booking system
   - –ê–Ω—Ç–∏-–¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π

3. –ó–ê–ü–ò–°–¨ –ù–ê –°–õ–û–¢–´:
   - week_signup_pick_teacher -> week_signup_slot_list -> week_signup_confirm
   - week_unsign_list -> week_unsign_confirm
   - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π

4. –î–ï–¢–ê–õ–¨–ù–´–ï –≠–ö–†–ê–ù–´:
   - my_bookings_list —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
   - booking_cancel_confirm | booking_resign_pick_slot | booking_info
   - my_grades_week_details —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏
   - history_week_details —Å –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π

5. FSM STATES:
   - –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
   - –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏ –Ω–∞ —Å–ª–æ—Ç—ã
   - –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –º–µ–∂–¥—É —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏

6. –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–Ø –ò –°–û–û–ë–©–ï–ù–ò–Ø:
   - "‚úÖ –ó–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞: {–¥–∞—Ç–∞} {–≤—Ä–µ–º—è}, –ø—Ä–µ–ø. {–§–ò–û}"  
   - "üóëÔ∏è –ó–∞–ø–∏—Å—å –æ—Ç–º–µ–Ω–µ–Ω–∞"
   - "üîÑ –ü–µ—Ä–µ–∑–∞–ø–∏—Å—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞: {–Ω–æ–≤–∞—è –¥–∞—Ç–∞/–≤—Ä–µ–º—è}"
   - "üì§ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω"
   - –ê–Ω—Ç–∏-–¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ: "‚ÑπÔ∏è –ù–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é —É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∑–∞–ø–∏—Å—å. –•–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å—Å—è?"

7. –õ–û–ì–ò–†–û–í–ê–ù–ò–ï:
   - STUDENT_SIGNUP {student_id} {week} {slot_id}
   - STUDENT_UNSIGN {student_id} {week} {slot_id}  
   - STUDENT_UPLOAD {student_id} {week} {file_id}
   - STUDENT_VIEW_GRADE {student_id} {week}

8. –†–ï–§–ê–ö–¢–û–†–ò–ù–ì –ì–û–¢–û–í–ù–û–°–¢–ò:
   - –†–∞–∑–±–∏—Ç—å –Ω–∞ –º–æ–¥—É–ª–∏: wic_handler.py, bookings_handler.py, grades_handler.py
   - –í—ã–Ω–µ—Å—Ç–∏ —Å—Ç–∞—Ç—É—Å—ã –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Å–µ—Ä–≤–∏—Å
   - –°–æ–∑–¥–∞—Ç—å –±–∞–∑–æ–≤—ã–µ –∫–ª–∞—Å—Å—ã –¥–ª—è callback handling
"""